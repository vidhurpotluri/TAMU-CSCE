// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl
// Name: Vidhur Potluri

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:

    // Selecting the register using an 8 way DMux
    DMux(in = load, sel = address[2], a = a1, b = b1);
    DMux4Way(in = a1, sel[0] = address[0], sel[1] = address[1], a = a, b = b, c = c, d = d);
    DMux4Way(in = b1, sel[0] = address[0], sel[1] = address[1], a = e, b = f, c = g, d = h);

   	// Loading the register
   	Register(in = in, load = a, out = r1);
   	Register(in = in, load = b, out = r2);
   	Register(in = in, load = c, out = r3);
   	Register(in = in, load = d, out = r4);
   	Register(in = in, load = e, out = r5);
   	Register(in = in, load = f, out = r6);
   	Register(in = in, load = g, out = r7);
   	Register(in = in, load = h, out = r8);

   	//Mux8Way16
   	Mux16(a = r1, b = r2, sel = address[0], out = q);
   	Mux16(a = r3, b = r4, sel = address[0], out = r);
   	Mux16(a = r5, b = r6, sel = address[0], out = s);
   	Mux16(a = r7, b = r8, sel = address[0], out = t);
   	Mux16(a = q, b = r, sel = address[1], out = u);
   	Mux16(a = s, b = t, sel = address[1], out = v);
   	Mux16(a = u, b = v, sel = address[2], out = out);

}