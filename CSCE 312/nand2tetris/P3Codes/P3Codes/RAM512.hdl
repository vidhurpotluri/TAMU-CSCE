// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
   	
   	// DMux8Way
    DMux(in = load, sel = address[8], a = a1, b = b1);
    DMux4Way(in = a1, sel[0] = address[6], sel[1] = address[7], a = a, b = b, c = c, d = d);
    DMux4Way(in = b1, sel[0] = address[6], sel[1] = address[7], a = e, b = f, c = g, d = h);

    //RAM64
    RAM64(in = in, load = a, address = address[0..5], out = r1);
    RAM64(in = in, load = b, address = address[0..5], out = r2);
    RAM64(in = in, load = c, address = address[0..5], out = r3);
    RAM64(in = in, load = d, address = address[0..5], out = r4);
    RAM64(in = in, load = e, address = address[0..5], out = r5);
    RAM64(in = in, load = f, address = address[0..5], out = r6);
    RAM64(in = in, load = g, address = address[0..5], out = r7);
    RAM64(in = in, load = h, address = address[0..5], out = r8);

    //Mux8Way16
    Mux16(a = r1, b = r2, sel = address[6], out = q);
   	Mux16(a = r3, b = r4, sel = address[6], out = r);
   	Mux16(a = r5, b = r6, sel = address[6], out = s);
   	Mux16(a = r7, b = r8, sel = address[6], out = t);
   	Mux16(a = q, b = r, sel = address[7], out = u);
   	Mux16(a = s, b = t, sel = address[7], out = v);
   	Mux16(a = u, b = v, sel = address[8], out = out);
}